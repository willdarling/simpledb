William Darling
Winter-2019
Databases
Aaron Elmore

Describe any design decisions you made. These may be minimal for Lab 1.

  Most of the design decisions in this lab came down to what kind of Collection or Map classes to use. For any variable
  length lists I used an ArrayList so I could easily add and resize elements, and for pre-determined, fixed-sized data
  structures I used regular arrays in order to preserve length and iterate over them fully even if all the entries were
  initilized to null. I used ConcurrentHashMaps where maps were needed based on the already given library headers,
  and since we're going to have to introduce concurrency eventually, and I won't need to go back and change very HashMap
  to a ConcurrentHashMap. I decided to try and extend AbstractDbFileIterator in HeapFileIterator, and did it mostly 
  successfully. But if I had more time, I bet the bug in SeqScan is based on their interaction, and I would rather just
  extend DbFileIterator directly. Oh well.

Discuss and justify any changes you made to the API.

  N/A

Describe how you and your partner split up the work. You are both responsible for understanding all of the code being submitted.

  I did it alone.


Describe any missing or incomplete elements of your code.

  I fail the testSmall and testCache most likely due to a bug in my SeqScan. Although, since it relies heavily
  on the functionality of HeapFileIterator, there's a possibility the problem is there. Either way, I don't have
  enough time to fix it.

Describe how long you spent on the lab, and whether there was anything you found particularly difficult or confusing.

  I spent ~20 hours on the lab. I started late (and hence was under such a time crunch) because I'm applying to
  acting school and had to take days off of my class work to travel to auditions and work on audition pieces. This
  is also part of the reason why I chose not to look for a partner because I assumed they wouldn't put up with my
  schedule and many absences off campus, and if they did they would (rightly so) not want to wait until the last
  mintue for my stuff to be done and they'd just do it all themself, then I wouldn't learn anything. I say
  this not as an excuse but as an explanation. I will manage my time more efficiently next time.

  I found it hard to understand how everything fits together until I had actually finished everything. For the most
  part it felt like I was stumbling around with a very small flashlight and could only look at small parts at a time
  and only after I had bumped into everything in the room did I understand it. Maybe a visualization of their connection
  in the lab specification would be helpful. I also found HeapFileIterator jumped out and surprised me with how long
  that would take and it definitely played a role in my time mismanagement. I would suggest including it as its own
  exercise in the lab specification, seperate from Exercise 5. iterator() in HeapFile is NOT a skeleton method in my
  opinion.